openapi: 3.0.3
info:
  title: A Força Admin API
  description: A **Força** é uma organização que busca ajudar os trabalhadores autônomos da cidade de Lavras (MG) e região a encontrar e firmar contrato com pessoas interessadas em seus serviços.
  version: 1.0.0
tags:
  - name: contrato
  - name: contratante
  - name: trabalhador
  - name: servico
  - name: categoria
paths:
  /categoria:
    post:
      tags:
        - categoria
      summary: Cria nova categoria
      operationId: criarCategoria
      requestBody:
        description: Deve ser informado apenas o nome da categoria, logo, o nome é obrigatório. Além disso, deve ser único e não ultrapassar 50 caracteres.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: TI
      responses:
        "201":
          description: Nova categoria criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categoria"
        "400":
          description: |-
            - O nome da categoria é obrigatório
            - O nome da categoria deve ter no máximo 50 caracteres
            - Nome da categoria já registrado
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    $ref: "#/components/responses/CategoriaNomeObrigatorio"
                  - type: object
                    $ref: "#/components/responses/CategoriaNomeTamanho"
                  - type: object
                    $ref: "#/components/responses/CategoriaNomeJaRegistrado"
    get:
      tags:
        - categoria
      summary: Obtém todas as categorias
      operationId: obterTodasCategorias
      responses:
        "200":
          description: Todas as categorias registradas. Senão apenas um vetor vazio.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Categoria"
  /categoria/{id}:
    get:
      tags:
        - categoria
      summary: Obtém categoria pelo ID
      operationId: obterCategoriaPorId
      parameters:
        - name: id
          in: path
          description: ID da categoria buscada
          required: true
          schema:
            type: number
            example: 10
      responses:
        "200":
          description: Categoria encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categoria"
        "404":
          description: Categoria não encontrada
          content:
            text/plain:
              schema:
                $ref: "#/components/responses/RegistroNaoEncontrado"
    put:
      tags:
        - categoria
      summary: Atualiza atributos da categoria
      operationId: atualizaCategoriaPorId
      parameters:
        - name: id
          in: path
          description: ID da categoria atualizada
          required: true
          schema:
            type: number
            example: 10
      requestBody:
        description: Deve ser informado apenas o nome da categoria
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: "IT"
      responses:
        "200":
          description: Categoria encontrada e atualizada
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    example: 10
                  nome:
                    type: string
                    example: "IT"
        "400":
          description: |-
            - O nome da categoria é obrigatório
            - O nome da categoria deve ter no máximo 50 caracteres
            - Nome da categoria já registrado
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    $ref: "#/components/responses/CategoriaNomeObrigatorio"
                  - type: object
                    $ref: "#/components/responses/CategoriaNomeTamanho"
                  - type: object
                    $ref: "#/components/responses/CategoriaNomeJaRegistrado"
        "404":
          description: Categoria não encontrada
          content:
            text/plain:
              schema:
                $ref: "#/components/responses/RegistroNaoEncontrado"
    delete:
      tags:
        - categoria
      summary: Remove categoria
      operationId: removeCategoriaPorId
      parameters:
        - name: id
          in: path
          description: ID da categoria removida
          required: true
          schema:
            type: number
            example: 1
      responses:
        "204":
          description: Categoria encontrada e deletada
        "404":
          description: Categoria não encontrada
          content:
            text/plain:
              schema:
                $ref: "#/components/responses/RegistroNaoEncontrado"
        "409":
          description: Categoria vinculada a algum registro
          content:
            application/json:
              schema:
                properties:
                  mensagem:
                    type: string
                    default: Essa categoria está sendo utilizada em outros registros
  /servico:
    post:
      tags:
        - servico
      summary: Cria novo serviço
      operationId: criaServico
      requestBody:
        description: Deve ser informado o nome do serviço e o ID da categoria já registrada na base de dados, ambos obrigatórios. O nome do serviço deve ser único e não ultrapassar 75 caracteres.
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: Manutenção de notebook
                categoriaId:
                  type: number
                  example: 10
      responses:
        "201":
          description: Novo serviço criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Servico"
        "400":
          description: |-
            - O nome do serviço é obrigatório
            - O nome do serviço deve ter no máximo 75 caracteres
            - A categoria é obrigatória e deve estar registrada
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    $ref: "#/components/responses/ServicoNomeObrigatorio"
                  - type: object
                    $ref: "#/components/responses/ServicoNomeTamanho"
                  - type: object
                    $ref: "#/components/responses/ServicoCategoriaObrigatoria"
    get:
      tags:
        - servico
      summary: Obtém uma lista paginada dos serviços
      operationId: obterTodosServicos
      parameters:
        - name: nome
          description: Nome do serviço
          in: query
          schema:
            type: string
        - $ref: "#/components/parameters/indiceLista"
        - $ref: "#/components/parameters/quantidadePorPagina"
      responses:
        "200":
          description: Todos os serviços encontrados e paginados. Senão um vetor vazio.
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      servicos:
                        type: array
                        items:
                          $ref: "#/components/schemas/ServicoResumido"
                      qtdeServicos:
                        type: number
                        example: 2
                      pagNum:
                        type: number
                        example: 0
                      pagTam:
                        type: number
                        example: 5
                  - type: array
                    example: []
  /servico/{id}:
    get:
      tags:
        - servico
      summary: Obtém serviço pelo ID
      operationId: obterServicoPorId
      parameters:
        - name: id
          in: path
          description: ID do serviço buscado
          required: true
          schema:
            type: number
            example: 11
      responses:
        "200":
          description: Serviço encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Servico"
        "404":
          description: Serviço não encontrado
          content:
            text/plain:
              schema:
                $ref: "#/components/responses/RegistroNaoEncontrado"
    put:
      tags:
        - servico
      summary: Atualiza atributos do serviço registrado
      operationId: atualizaServicoPorId
      parameters:
        - name: id
          in: path
          description: ID do serviço atualizada
          required: true
          schema:
            type: number
            example: 11
      requestBody:
        description: Deve ser informado o nome do serviço e o ID da categoria.
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: Manutenção em computadores
                categoriaId:
                  type: number
                  example: 10
      responses:
        "200":
          description: Serviço encontrado e atualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    example: 11
                  nome:
                    type: string
                    example: Manutenção em computadores
                  categoria:
                    type: object
                    $ref: "#/components/schemas/Categoria"
        "400":
          description: |-
            - O nome do serviço é obrigatório
            - O nome do serviço deve ter no máximo 75 caracteres
            - A categoria é obrigatória e deve estar registrada
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    $ref: "#/components/responses/ServicoNomeObrigatorio"
                  - type: object
                    $ref: "#/components/responses/ServicoNomeTamanho"
                  - type: object
                    $ref: "#/components/responses/ServicoCategoriaObrigatoria"
        "404":
          description: Serviço não encontrada
          content:
            text/plain:
              schema:
                $ref: "#/components/responses/RegistroNaoEncontrado"
    delete:
      tags:
        - servico
      summary: Remove serviço
      operationId: removeServicoPorId
      parameters:
        - name: id
          in: path
          description: ID do serviço removido
          required: true
          schema:
            type: number
            example: 11
      responses:
        "204":
          description: Serviço encontrado e deletado
        "404":
          description: Serviço não encontrado
          content:
            text/plain:
              schema:
                $ref: "#/components/responses/RegistroNaoEncontrado"
        "409":
          description: Serviço vinculado a algum registro
          content:
            application/json:
              schema:
                properties:
                  mensagem:
                    type: string
                    default: Esse serviço está sendo utilizada em outros registros
  /trabalhador:
    post:
      tags:
        - trabalhador
      summary: Cria novo trabalhador
      operationId: criaTrabalhador
      requestBody:
        description: Os atributos obrigatórios são nome, telefone e IDs dos serviços prestados
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: José Alves Barbosa
                telefone:
                  type: string
                  example: 31987456321
                servicosIds:
                  type: array
                  items:
                    type: integer
                    example: 11
              required:
                - nome
                - telefone
                - servicosIds
      responses:
        "201":
          description: Novo trabalhador criado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 21
                  nome:
                    type: string
                    example: José Alves Barbosa
                  telefone:
                    type: string
                    example: 31987456321
                  endereco:
                    type: string
                    example: null
                  email:
                    type: string
                    example: null
                  nivel:
                    type: number
                    default: 1
                  dataCadastro:
                    type: string
                    example: "2023-04-07"
                  dataUltimoContrato:
                    type: string
                    example: null
                  referencias:
                    type: string
                    example: null
                  restricoes:
                    type: string
                    example: null
                  observacoes:
                    type: string
                    example: null
                  servicos:
                    type: array
                    items:
                      $ref: "#/components/schemas/Servico"
        "400":
          description: |-
            - O nome do trabalhador é obrigatório
            - O nome do trabalhador deve ter no máximo 100 caracteres
            - O telefone do trabalhador é obrigatório
            - O número do telefone do trabalhador deve ter somente os 11 dígitos
            - O endereço do trabalhador deve ter no máximo 200 caracteres
            - O email do trabalhador deve ter no máximo 100 caracteres
            - O email do trabalhador deve ser de formato válido
            - O serviço é obrigatório e deve estar registrado
components:
  schemas:
    Categoria:
      type: object
      properties:
        id:
          type: number
          example: 10
        nome:
          type: string
          example: TI
    Servico:
      type: object
      properties:
        id:
          type: number
          example: 11
        nome:
          type: string
          example: Manutenção de notebook
        categoria:
          $ref: "#/components/schemas/Categoria"
    ServicoResumido:
      type: object
      properties:
        id:
          type: number
          example: 11
        nome:
          type: string
          example: Manutenção de notebook
        categoriaNome:
          type: string
          example: TI
  responses:
    "RegistroNaoEncontrado":
      type: string
      default: Registro não encontrado
    "CategoriaNomeObrigatorio":
      type: object
      properties:
        nome:
          type: string
          default: O nome da categoria é obrigatório
    "CategoriaNomeTamanho":
      type: object
      properties:
        nome:
          type: string
          default: O nome da categoria deve ter no máximo 50 caracteres
    "CategoriaNomeJaRegistrado":
      type: object
      properties:
        nome:
          type: string
          default: Nome da categoria já registrado
    "ServicoNomeObrigatorio":
      type: object
      properties:
        nome:
          type: string
          default: O nome do serviço é obrigatório
    "ServicoNomeTamanho":
      type: object
      properties:
        nome:
          type: string
          default: O nome do serviço deve ter no máximo 75 caracteres
    "ServicoCategoriaObrigatoria":
      type: object
      properties:
        nome:
          type: string
          default: A categoria é obrigatória e deve estar registrada
  parameters:
    indiceLista:
      name: pagNum
      description: Índice da lista
      in: query
      schema:
        type: number
        default: 0
    quantidadePorPagina:
      name: pagTam
      description: Quantidade de registro
      in: query
      schema:
        type: number
        default: 5
